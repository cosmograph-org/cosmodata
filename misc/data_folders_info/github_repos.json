{
  "project_group": "imbed_saves",
  "data_filenames": [
    "cluster_indices..parquet",
    "planar_embeddings..parquet",
    "github_repo_for_cosmos.parquet",
    "github-repos.parquet"
  ],
  "data_filepaths": {
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/cluster_indices..parquet": 83298198,
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/planar_embeddings..parquet": 103473720,
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/github_repo_for_cosmos.parquet": 3747110796,
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/github-repos.parquet": 3880498828
  },
  "code_file": "github_repos.py",
  "code_contents": "\"\"\"Data prep for Github Repositories data.\n\nData source:\n- [GitHub Public Repository Metadata](https://www.kaggle.com/datasets/pelmers/github-repository-metadata-with-5-stars?resource=download) \n- ([Dropbox link to parquet file](https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=0))\n\n\"\"\"\n\nfrom functools import partial\nfrom io import BytesIO\nimport os\nfrom dataclasses import dataclass, KW_ONLY\nfrom typing import Sequence, Callable\n\nfrom dol import cache_this as _cache_this, Files, Pipe\nfrom graze import url_to_file_download\nfrom graze.base import (\n    return_filepath,\n    return_contents,\n    key_egress_print_downloading_message_with_size,\n)\nfrom dol.tools import cache_property_method\nfrom imbed.util import (\n    saves_join,\n    get_config,\n    planar_embeddings,\n    PlanarEmbeddingSpec,\n    planar_embeddings_dict_to_df,\n    DFLT_PLANAR_EMBEDDING_KIND,\n    ensure_fullpath,\n    ensure_cache,\n    add_extension,\n    CacheSpec,\n)\nfrom imbed.data_prep import kmeans_cluster_indices\nfrom imbed.base import extension_based_wrap\nfrom lkj import clog, print_with_timestamp, log_calls as _log_calls\n\nimport pandas as pd\nimport numpy as np\n\n\nraw_data_url = 'https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=1'\n\ndata_name = 'github_repos'\nraw_data_name = 'github_repos.parquet'\n\n# TODO: Use config2py tools to use and save default values\n# TODO: Use config2py tools to include a message containing the default values\n_DFLT_CACHE_DIR = saves_join(data_name)\nDFLT_CACHE_DIR = get_config('GITHUB_REPOS_CACHE_DIR', default=_DFLT_CACHE_DIR)\n_DFLT_RAW_DATA_FILEPATH = os.path.join(DFLT_CACHE_DIR, raw_data_name)\nDFLT_RAW_DATA_FILEPATH = get_config(\n    'GITHUB_REPOS_RAW_DATA_FILEPATH', default=_DFLT_RAW_DATA_FILEPATH\n)\nDFLT_N_CLUSTERS = (5, 8, 13, 21, 34)\n\n# get_raw_data = partial(\n#     url_to_file_download, raw_data_url, filepath=DFLT_RAW_DATA_FILEPATH, overwrite=False\n# )\n\n# get_base_data = Pipe(get_raw_data, BytesIO, pd.read_parquet)\n\n# Have a separate config object? Like this:\n# @dataclass\n# class GithubReposConfig:\n#     _: KW_ONLY\n#     raw_data_url: str = (\n#         'https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=1'\n#     )\n#     data_name = 'github_repos'\n#     raw_data_name = 'github_repos.parquet'\n\n\n# TODO: _cache_this doesn't work well with partial\n# cache_this = partial(_cache_this, cache='cache')\ncache_this = _cache_this\n\nlog_calls = _log_calls(\n    logger=print_with_timestamp,\n    log_condition=partial(_log_calls.instance_flag_is_set, flag_attr='verbose'),\n)\n\n\n@dataclass\nclass GithubReposData:\n    _: KW_ONLY\n    raw_data_src: str = (\n        'https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=1'\n    )\n    cache: CacheSpec = DFLT_CACHE_DIR\n    raw_data_local_path: str = DFLT_RAW_DATA_FILEPATH\n    planar_compute_chk_size: int = 1000\n    embeddings_column: str = 'embedding'\n    text_segments_column: str = 'text'\n    planar_embeddings_func: PlanarEmbeddingSpec = 'ncvis'\n    drop_duplicates: bool = True\n    n_clusters: Sequence[int] = DFLT_N_CLUSTERS\n    mk_cluster_learner: Callable = kmeans_cluster_indices\n    verbose: int = 1\n\n    def __post_init__(self):\n        self.raw_data_local_path = ensure_fullpath(\n            self.raw_data_local_path, conditional_rootdir=self.cache\n        )\n        self.cache = extension_based_wrap(ensure_cache(self.cache))\n        self.log = clog(self.verbose)\n\n        # TODO: Why do I need to do this?\n        self.mk_cluster_learner = staticmethod(self.mk_cluster_learner)\n\n    @property\n    @log_calls\n    def _raw_data_bytes(self):\n        r = url_to_file_download(\n            self.raw_data_src,\n            filepath=self.raw_data_local_path,\n            overwrite=False,\n            url_egress=key_egress_print_downloading_message_with_size,\n            return_func=return_contents,\n        )\n        return r\n\n    @cache_this(cache=None)\n    @log_calls\n    def raw_data(self):\n        df = pd.read_parquet(BytesIO(self._raw_data_bytes))\n        if self.drop_duplicates:\n            n_rows_before = len(df)\n            self.log(f\"Dropping duplicate nameWithOwner (github stub)...\")\n            df = df.drop_duplicates(subset=['nameWithOwner'])\n            n_rows_after = len(df)\n            self.log(f\"... Dropped {n_rows_before - n_rows_after} duplicates\")\n        assert df.nameWithOwner.is_unique, f\"Duplicate nameWithOwner in df\"\n        df = df.set_index(\"nameWithOwner\", drop=False)\n        return df\n\n    @property\n    def text_segments(self):\n        return self.raw_data[self.text_segments_column]\n\n    @property\n    def embeddings(self):\n        return self.raw_data[self.embeddings_column]\n\n    @property\n    def embeddings_matrix(self):\n        # Note: NOT the same as self.embeddings.to_numpy()!!\n        return np.array(self.embeddings.to_list())\n\n    segment_vectors = embeddings  # alias\n\n    @cache_this(cache='cache', key=add_extension('.parquet'))\n    @log_calls\n    def planar_embeddings(self):\n        self.log(\n            \"Computing and saving planar embeddings with {self.planar_embeddings_func}\"\n        )\n        r = planar_embeddings_dict_to_df(planar_embeddings(self.segment_vectors))\n        return r\n\n    def data_with_planar_embeddings(self):\n        # join self.raw_data with self.planar_embeddings over the indices\n        return pd.merge(\n            self.raw_data, self.planar_embeddings, left_index=True, right_index=True\n        )\n\n    @cache_this(cache='cache', key=add_extension('.parquet'))\n    @log_calls\n    def cluster_indices(self):\n        \"\"\"\n        Make a dataframe containing kmeans cluster indices for the original embeddings.\n        \"\"\"\n        self.log(f\"Computing cluster indices for num of clusters: {self.n_clusters}\")\n\n        def compute_cluster_indices():\n            for n_clusters in self.n_clusters:\n                yield self.mk_cluster_learner(\n                    self.embeddings_matrix, n_clusters=n_clusters\n                )\n\n        cluster_columns = (\n            f\"clusters_{n_clusters:02.0f}\" for n_clusters in self.n_clusters\n        )\n\n        r = pd.DataFrame(\n            dict(zip(cluster_columns, compute_cluster_indices())),\n            index=self.raw_data.index,\n        )\n        return r\n",
  "num_of_data_files": 4,
  "tables_info": {
    "cluster_indices..parquet": {
      "shape": [
        3065063,
        5
      ],
      "first_row": {
        "clusters_05": 4,
        "clusters_08": 6,
        "clusters_13": 9,
        "clusters_21": 17,
        "clusters_34": 21
      }
    },
    "planar_embeddings..parquet": {
      "shape": [
        3065063,
        2
      ],
      "first_row": {
        "x": 3.7858853340148926,
        "y": 7.999374866485596
      }
    },
    "github_repo_for_cosmos.parquet": {
      "shape": [
        3065063,
        28
      ],
      "first_row": {
        "owner": "xdedzl",
        "name": "RuntimeTerrainEditor",
        "stars": 82,
        "forks": 29,
        "watchers": 6,
        "isFork": false,
        "isArchived": false,
        "languages": "C#: 162842, ShaderLab: 1965",
        "languageCount": 2,
        "topics": "",
        "topicCount": 0,
        "diskUsageKb": 140632,
        "pullRequests": 0,
        "issues": 0,
        "description": "\u8fd0\u884c\u65f6\u5730\u5f62\u7f16\u8f91\u5668",
        "primaryLanguage": "C#",
        "createdAt": "2019-03-18T15:54:07Z",
        "pushedAt": "2020-07-29T15:35:12Z",
        "defaultBranchCommitCount": 40.0,
        "license": null,
        "assignableUserCount": 1,
        "codeOfConduct": null,
        "forkingAllowed": true,
        "nameWithOwner": "xdedzl/RuntimeTerrainEditor",
        "parent": NaN,
        "embedding": [
          -0.054284337908029556,
          0.13081394135951996,
          0.14242872595787048,
          -0.07023005932569504,
          -0.04308788850903511,
          0.007899035699665546,
          0.11427763849496841,
          0.03757578879594803,
          -0.10030052810907364,
          0.02773275226354599,
          -0.04835391044616699,
          -0.026871485635638237,
          0.07333061099052429,
          -0.03354014456272125,
          0.049116745591163635,
          0.003119011875241995,
          -0.06993476301431656,
          -0.046262264251708984,
          -0.0551702119410038,
          0.08632341772317886,
          0.010759668424725533,
          -0.010353642515838146,
          0.03228515759110451,
          -0.04803401231765747,
          -0.006336453836411238,
          -0.010575111024081707,
          0.07584058493375778,
          0.0638813003897667,
          0.014198578894138336,
          -0.008434250950813293,
          -0.051971226930618286,
          -0.07820291817188263,
          -0.01029212400317192,
          -0.062011122703552246,
          0.1155572310090065,
          -0.01993214711546898,
          0.1592603176832199,
          0.04542560875415802,
          0.036911383271217346,
          -0.05211887136101723,
          0.0010442845523357391,
          0.012537566013634205,
          -0.0591566376388073,
          0.07377354800701141,
          0.056892745196819305,
          0.014666122384369373,
          0.021420905366539955,
          0.15817758440971375,
          -0.04771411418914795,
          0.011085718870162964,
          0.023204956203699112,
          -0.00314669543877244,
          -0.07224787771701813,
          -0.0700824111700058,
          0.0026130182668566704,
          -0.1018754169344902,
          -0.0038726190105080605,
          -0.08410874009132385,
          0.015465869568288326,
          -0.021925361827015877,
          0.07598823308944702,
          0.016794679686427116,
          0.03336789086461067,
          0.09050671011209488,
          0.010858098044991493,
          0.03024272620677948,
          -0.07997465878725052,
          0.01258678175508976,
          -0.04532717913389206,
          0.02792961336672306,
          -0.11939602345228195,
          -0.08228777348995209,
          -0.005016872193664312,
          -0.1259908527135849,
          0.04303867369890213,
          -0.10630477964878082,
          -0.044342875480651855,
          -0.038929205387830734,
          -0.04262034222483635,
          -0.13288097083568573,
          0.004124846775084734,
          0.028643231838941574,
          -0.026576194912195206,
          -0.026330118998885155,
          -0.0956743061542511,
          -0.06023937836289406,
          -0.029332244768738747,
          -0.016880804672837257,
          0.041340749710798264,
          -0.028864698484539986,
          -0.03469669818878174,
          0.03201447054743767,
          0.10827338695526123,
          0.021494727581739426,
          0.0226143728941679,
          0.012186908163130283,
          -0.0036296192556619644,
          -0.002013208344578743,
          -0.010378249920904636,
          -0.09414863586425781,
          0.03449983894824982,
          -0.044293660670518875,
          0.03587786480784416,
          0.01756981760263443,
          0.036197762936353683,
          0.015650426968932152,
          -0.09331197291612625,
          0.07126357406377792,
          -0.05049477145075798,
          0.020842626690864563,
          -0.21674363315105438,
          -0.10226913541555405,
          -0.0062995427288115025,
          -0.012882072478532791,
          0.06673578172922134,
          0.019612247124314308,
          0.05831998586654663,
          0.015970325097441673,
          0.051971226930618286,
          -0.061912696808576584,
          -0.056991174817085266,
          0.020621158182621002,
          -0.03961821645498276,
          0.00885873194783926,
          -0.008760301396250725,
          -0.06019015982747078,
          -0.03969204053282738,
          -0.029652144759893417,
          -0.011239515617489815,
          0.01249450258910656,
          -0.03545953333377838,
          0.038633912801742554,
          0.04835391044616699,
          -0.015502780675888062,
          0.0014110914198681712,
          -0.06270013749599457,
          -0.13957424461841583,
          0.0401349775493145,
          -0.0025853347033262253,
          -0.02751128375530243,
          -0.013755641877651215,
          0.13563703000545502,
          -0.011916224844753742,
          0.0840103030204773,
          -0.1359323114156723,
          0.031817611306905746,
          0.009824579581618309,
          0.06899967789649963,
          0.04712353274226189,
          0.08563441038131714,
          -0.041365355253219604,
          -0.03708363696932793,
          -0.03730510547757149,
          -0.05049477145075798,
          0.04116849601268768,
          -0.07426570355892181,
          -0.03760039433836937,
          -0.01379255298525095,
          -0.024275386705994606,
          0.016536299139261246,
          -0.0999068096280098,
          -0.03745274990797043,
          0.04869841784238815,
          0.0690981075167656,
          -0.03255584090948105,
          -0.12293951213359833,
          -0.005958112422376871,
          0.06530854105949402,
          -0.14223186671733856,
          -0.03824019059538841,
          0.08145111799240112,
          -0.10945454984903336,
          -0.019439995288848877,
          -0.08932554721832275,
          -0.010901161469519138,
          -0.039052244275808334,
          0.026133257895708084,
          -0.025764144957065582,
          -0.04047948122024536,
          0.03531188890337944,
          0.005755099933594465,
          0.056745097041130066,
          -0.029455283656716347,
          0.14321616291999817,
          -0.08179562538862228,
          0.08061446249485016,
          0.08071289211511612,
          0.07234630733728409,
          0.04581933096051216,
          0.014579996466636658,
          -0.1756981760263443,
          0.011325642466545105,
          0.006459491793066263,
          0.04803401231765747,
          0.029750576242804527,
          -0.11969131231307983,
          0.10364716500043869,
          0.02271280437707901,
          0.004244809038937092,
          0.02477984130382538,
          0.029602928087115288,
          -0.008680326864123344,
          0.1625085175037384,
          0.007855972275137901,
          -0.049067530781030655,
          0.039347533136606216,
          -0.04266955703496933,
          0.03693598881363869,
          -0.028077257797122,
          0.00696394732221961,
          0.1254986971616745,
          0.021753108128905296,
          -0.0608791746199131,
          -0.10246599465608597,
          -0.02977517992258072,
          0.06225719302892685,
          0.04471198841929436,
          0.021974576637148857,
          -0.14567692577838898,
          0.015625817701220512,
          -0.03523806482553482,
          0.0019824488554149866,
          -0.054530415683984756,
          0.03745274990797043,
          0.06132211536169052,
          0.020571943372488022,
          0.008840275928378105,
          0.0007759080035611987,
          0.07766155153512955,
          -0.02556728385388851,
          0.005745871923863888,
          0.01804966665804386,
          0.02760971337556839,
          -0.04948585852980614,
          0.08322286605834961,
          0.026969917118549347,
          -0.0011119553819298744,
          -0.0354103185236454,
          0.016413262113928795,
          0.026330118998885155,
          -0.10896240174770355,
          0.08607734739780426,
          -0.006447188090533018,
          -0.11742740124464035,
          0.04210358485579491,
          -0.044244442135095596,
          0.01520748995244503,
          -0.08268149942159653,
          0.03782186284661293,
          0.008305060677230358,
          0.05733568221330643,
          0.11221060156822205,
          -0.010544351302087307,
          -0.021777715533971786,
          0.028766270726919174,
          0.08430559933185577
        ],
        "x": 3.7858853340148926,
        "y": 7.999374866485596
      }
    },
    "github-repos.parquet": {
      "shape": [
        3274587,
        26
      ],
      "first_row": {
        "owner": "xdedzl",
        "name": "RuntimeTerrainEditor",
        "stars": 82,
        "forks": 29,
        "watchers": 6,
        "isFork": false,
        "isArchived": false,
        "languages": "C#: 162842, ShaderLab: 1965",
        "languageCount": 2,
        "topics": "",
        "topicCount": 0,
        "diskUsageKb": 140632,
        "pullRequests": 0,
        "issues": 0,
        "description": "\u8fd0\u884c\u65f6\u5730\u5f62\u7f16\u8f91\u5668",
        "primaryLanguage": "C#",
        "createdAt": "2019-03-18T15:54:07Z",
        "pushedAt": "2020-07-29T15:35:12Z",
        "defaultBranchCommitCount": 40.0,
        "license": null,
        "assignableUserCount": 1,
        "codeOfConduct": null,
        "forkingAllowed": true,
        "nameWithOwner": "xdedzl/RuntimeTerrainEditor",
        "parent": NaN,
        "embedding": [
          -0.054284337908029556,
          0.13081394135951996,
          0.14242872595787048,
          -0.07023005932569504,
          -0.04308788850903511,
          0.007899035699665546,
          0.11427763849496841,
          0.03757578879594803,
          -0.10030052810907364,
          0.02773275226354599,
          -0.04835391044616699,
          -0.026871485635638237,
          0.07333061099052429,
          -0.03354014456272125,
          0.049116745591163635,
          0.003119011875241995,
          -0.06993476301431656,
          -0.046262264251708984,
          -0.0551702119410038,
          0.08632341772317886,
          0.010759668424725533,
          -0.010353642515838146,
          0.03228515759110451,
          -0.04803401231765747,
          -0.006336453836411238,
          -0.010575111024081707,
          0.07584058493375778,
          0.0638813003897667,
          0.014198578894138336,
          -0.008434250950813293,
          -0.051971226930618286,
          -0.07820291817188263,
          -0.01029212400317192,
          -0.062011122703552246,
          0.1155572310090065,
          -0.01993214711546898,
          0.1592603176832199,
          0.04542560875415802,
          0.036911383271217346,
          -0.05211887136101723,
          0.0010442845523357391,
          0.012537566013634205,
          -0.0591566376388073,
          0.07377354800701141,
          0.056892745196819305,
          0.014666122384369373,
          0.021420905366539955,
          0.15817758440971375,
          -0.04771411418914795,
          0.011085718870162964,
          0.023204956203699112,
          -0.00314669543877244,
          -0.07224787771701813,
          -0.0700824111700058,
          0.0026130182668566704,
          -0.1018754169344902,
          -0.0038726190105080605,
          -0.08410874009132385,
          0.015465869568288326,
          -0.021925361827015877,
          0.07598823308944702,
          0.016794679686427116,
          0.03336789086461067,
          0.09050671011209488,
          0.010858098044991493,
          0.03024272620677948,
          -0.07997465878725052,
          0.01258678175508976,
          -0.04532717913389206,
          0.02792961336672306,
          -0.11939602345228195,
          -0.08228777348995209,
          -0.005016872193664312,
          -0.1259908527135849,
          0.04303867369890213,
          -0.10630477964878082,
          -0.044342875480651855,
          -0.038929205387830734,
          -0.04262034222483635,
          -0.13288097083568573,
          0.004124846775084734,
          0.028643231838941574,
          -0.026576194912195206,
          -0.026330118998885155,
          -0.0956743061542511,
          -0.06023937836289406,
          -0.029332244768738747,
          -0.016880804672837257,
          0.041340749710798264,
          -0.028864698484539986,
          -0.03469669818878174,
          0.03201447054743767,
          0.10827338695526123,
          0.021494727581739426,
          0.0226143728941679,
          0.012186908163130283,
          -0.0036296192556619644,
          -0.002013208344578743,
          -0.010378249920904636,
          -0.09414863586425781,
          0.03449983894824982,
          -0.044293660670518875,
          0.03587786480784416,
          0.01756981760263443,
          0.036197762936353683,
          0.015650426968932152,
          -0.09331197291612625,
          0.07126357406377792,
          -0.05049477145075798,
          0.020842626690864563,
          -0.21674363315105438,
          -0.10226913541555405,
          -0.0062995427288115025,
          -0.012882072478532791,
          0.06673578172922134,
          0.019612247124314308,
          0.05831998586654663,
          0.015970325097441673,
          0.051971226930618286,
          -0.061912696808576584,
          -0.056991174817085266,
          0.020621158182621002,
          -0.03961821645498276,
          0.00885873194783926,
          -0.008760301396250725,
          -0.06019015982747078,
          -0.03969204053282738,
          -0.029652144759893417,
          -0.011239515617489815,
          0.01249450258910656,
          -0.03545953333377838,
          0.038633912801742554,
          0.04835391044616699,
          -0.015502780675888062,
          0.0014110914198681712,
          -0.06270013749599457,
          -0.13957424461841583,
          0.0401349775493145,
          -0.0025853347033262253,
          -0.02751128375530243,
          -0.013755641877651215,
          0.13563703000545502,
          -0.011916224844753742,
          0.0840103030204773,
          -0.1359323114156723,
          0.031817611306905746,
          0.009824579581618309,
          0.06899967789649963,
          0.04712353274226189,
          0.08563441038131714,
          -0.041365355253219604,
          -0.03708363696932793,
          -0.03730510547757149,
          -0.05049477145075798,
          0.04116849601268768,
          -0.07426570355892181,
          -0.03760039433836937,
          -0.01379255298525095,
          -0.024275386705994606,
          0.016536299139261246,
          -0.0999068096280098,
          -0.03745274990797043,
          0.04869841784238815,
          0.0690981075167656,
          -0.03255584090948105,
          -0.12293951213359833,
          -0.005958112422376871,
          0.06530854105949402,
          -0.14223186671733856,
          -0.03824019059538841,
          0.08145111799240112,
          -0.10945454984903336,
          -0.019439995288848877,
          -0.08932554721832275,
          -0.010901161469519138,
          -0.039052244275808334,
          0.026133257895708084,
          -0.025764144957065582,
          -0.04047948122024536,
          0.03531188890337944,
          0.005755099933594465,
          0.056745097041130066,
          -0.029455283656716347,
          0.14321616291999817,
          -0.08179562538862228,
          0.08061446249485016,
          0.08071289211511612,
          0.07234630733728409,
          0.04581933096051216,
          0.014579996466636658,
          -0.1756981760263443,
          0.011325642466545105,
          0.006459491793066263,
          0.04803401231765747,
          0.029750576242804527,
          -0.11969131231307983,
          0.10364716500043869,
          0.02271280437707901,
          0.004244809038937092,
          0.02477984130382538,
          0.029602928087115288,
          -0.008680326864123344,
          0.1625085175037384,
          0.007855972275137901,
          -0.049067530781030655,
          0.039347533136606216,
          -0.04266955703496933,
          0.03693598881363869,
          -0.028077257797122,
          0.00696394732221961,
          0.1254986971616745,
          0.021753108128905296,
          -0.0608791746199131,
          -0.10246599465608597,
          -0.02977517992258072,
          0.06225719302892685,
          0.04471198841929436,
          0.021974576637148857,
          -0.14567692577838898,
          0.015625817701220512,
          -0.03523806482553482,
          0.0019824488554149866,
          -0.054530415683984756,
          0.03745274990797043,
          0.06132211536169052,
          0.020571943372488022,
          0.008840275928378105,
          0.0007759080035611987,
          0.07766155153512955,
          -0.02556728385388851,
          0.005745871923863888,
          0.01804966665804386,
          0.02760971337556839,
          -0.04948585852980614,
          0.08322286605834961,
          0.026969917118549347,
          -0.0011119553819298744,
          -0.0354103185236454,
          0.016413262113928795,
          0.026330118998885155,
          -0.10896240174770355,
          0.08607734739780426,
          -0.006447188090533018,
          -0.11742740124464035,
          0.04210358485579491,
          -0.044244442135095596,
          0.01520748995244503,
          -0.08268149942159653,
          0.03782186284661293,
          0.008305060677230358,
          0.05733568221330643,
          0.11221060156822205,
          -0.010544351302087307,
          -0.021777715533971786,
          0.028766270726919174,
          0.08430559933185577
        ]
      }
    }
  }
}