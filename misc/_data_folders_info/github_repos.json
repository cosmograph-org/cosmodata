{
  "project_group": "imbed_saves",
  "data_filenames": [
    "cluster_indices..parquet",
    "planar_embeddings..parquet",
    "github_repo_for_cosmos.parquet",
    "github-repos.parquet"
  ],
  "data_filepaths": {
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/cluster_indices..parquet": 83298198,
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/planar_embeddings..parquet": 103473720,
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/github_repo_for_cosmos.parquet": 3747110796,
    "/Users/thorwhalen/Dropbox/_odata/app_data/imbed/saves/github_repos/github-repos.parquet": 3880498828
  },
  "code_file": "github_repos.py",
  "code_contents": "\"\"\"Data prep for Github Repositories data.\n\nData source:\n- [GitHub Public Repository Metadata](https://www.kaggle.com/datasets/pelmers/github-repository-metadata-with-5-stars?resource=download) \n- ([Dropbox link to parquet file](https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=0))\n\n\"\"\"\n\nfrom functools import partial\nfrom io import BytesIO\nimport os\nfrom dataclasses import dataclass, KW_ONLY\nfrom typing import Sequence, Callable\n\nfrom dol import cache_this as _cache_this, Files, Pipe\nfrom graze import url_to_file_download\nfrom graze.base import (\n    return_filepath,\n    return_contents,\n    key_egress_print_downloading_message_with_size,\n)\nfrom dol.tools import cache_property_method\nfrom imbed.util import (\n    saves_join,\n    get_config,\n    planar_embeddings,\n    PlanarEmbeddingSpec,\n    planar_embeddings_dict_to_df,\n    DFLT_PLANAR_EMBEDDING_KIND,\n    ensure_fullpath,\n    ensure_cache,\n    add_extension,\n    CacheSpec,\n)\nfrom imbed.data_prep import kmeans_cluster_indices\nfrom imbed.base import extension_based_wrap\nfrom lkj import clog, print_with_timestamp, log_calls as _log_calls\n\nimport pandas as pd\nimport numpy as np\n\n\nraw_data_url = 'https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=1'\n\ndata_name = 'github_repos'\nraw_data_name = 'github_repos.parquet'\n\n# TODO: Use config2py tools to use and save default values\n# TODO: Use config2py tools to include a message containing the default values\n_DFLT_CACHE_DIR = saves_join(data_name)\nDFLT_CACHE_DIR = get_config('GITHUB_REPOS_CACHE_DIR', default=_DFLT_CACHE_DIR)\n_DFLT_RAW_DATA_FILEPATH = os.path.join(DFLT_CACHE_DIR, raw_data_name)\nDFLT_RAW_DATA_FILEPATH = get_config(\n    'GITHUB_REPOS_RAW_DATA_FILEPATH', default=_DFLT_RAW_DATA_FILEPATH\n)\nDFLT_N_CLUSTERS = (5, 8, 13, 21, 34)\n\n# get_raw_data = partial(\n#     url_to_file_download, raw_data_url, filepath=DFLT_RAW_DATA_FILEPATH, overwrite=False\n# )\n\n# get_base_data = Pipe(get_raw_data, BytesIO, pd.read_parquet)\n\n# Have a separate config object? Like this:\n# @dataclass\n# class GithubReposConfig:\n#     _: KW_ONLY\n#     raw_data_url: str = (\n#         'https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=1'\n#     )\n#     data_name = 'github_repos'\n#     raw_data_name = 'github_repos.parquet'\n\n\n# TODO: _cache_this doesn't work well with partial\n# cache_this = partial(_cache_this, cache='cache')\ncache_this = _cache_this\n\nlog_calls = _log_calls(\n    logger=print_with_timestamp,\n    log_condition=partial(_log_calls.instance_flag_is_set, flag_attr='verbose'),\n)\n\n\n@dataclass\nclass GithubReposData:\n    _: KW_ONLY\n    raw_data_src: str = (\n        'https://www.dropbox.com/s/kokiypcm2ylx4an/github-repos.parquet?dl=1'\n    )\n    cache: CacheSpec = DFLT_CACHE_DIR\n    raw_data_local_path: str = DFLT_RAW_DATA_FILEPATH\n    planar_compute_chk_size: int = 1000\n    embeddings_column: str = 'embedding'\n    text_segments_column: str = 'text'\n    planar_embeddings_func: PlanarEmbeddingSpec = 'ncvis'\n    drop_duplicates: bool = True\n    n_clusters: Sequence[int] = DFLT_N_CLUSTERS\n    mk_cluster_learner: Callable = kmeans_cluster_indices\n    verbose: int = 1\n\n    def __post_init__(self):\n        self.raw_data_local_path = ensure_fullpath(\n            self.raw_data_local_path, conditional_rootdir=self.cache\n        )\n        self.cache = extension_based_wrap(ensure_cache(self.cache))\n        self.log = clog(self.verbose)\n\n        # TODO: Why do I need to do this?\n        self.mk_cluster_learner = staticmethod(self.mk_cluster_learner)\n\n    @property\n    @log_calls\n    def _raw_data_bytes(self):\n        r = url_to_file_download(\n            self.raw_data_src,\n            filepath=self.raw_data_local_path,\n            overwrite=False,\n            url_egress=key_egress_print_downloading_message_with_size,\n            return_func=return_contents,\n        )\n        return r\n\n    @cache_this(cache=None)\n    @log_calls\n    def raw_data(self):\n        df = pd.read_parquet(BytesIO(self._raw_data_bytes))\n        if self.drop_duplicates:\n            n_rows_before = len(df)\n            self.log(f\"Dropping duplicate nameWithOwner (github stub)...\")\n            df = df.drop_duplicates(subset=['nameWithOwner'])\n            n_rows_after = len(df)\n            self.log(f\"... Dropped {n_rows_before - n_rows_after} duplicates\")\n        assert df.nameWithOwner.is_unique, f\"Duplicate nameWithOwner in df\"\n        df = df.set_index(\"nameWithOwner\", drop=False)\n        return df\n\n    @property\n    def text_segments(self):\n        return self.raw_data[self.text_segments_column]\n\n    @property\n    def embeddings(self):\n        return self.raw_data[self.embeddings_column]\n\n    @property\n    def embeddings_matrix(self):\n        # Note: NOT the same as self.embeddings.to_numpy()!!\n        return np.array(self.embeddings.to_list())\n\n    segment_vectors = embeddings  # alias\n\n    @cache_this(cache='cache', key=add_extension('.parquet'))\n    @log_calls\n    def planar_embeddings(self):\n        self.log(\n            \"Computing and saving planar embeddings with {self.planar_embeddings_func}\"\n        )\n        r = planar_embeddings_dict_to_df(planar_embeddings(self.segment_vectors))\n        return r\n\n    def data_with_planar_embeddings(self):\n        # join self.raw_data with self.planar_embeddings over the indices\n        return pd.merge(\n            self.raw_data, self.planar_embeddings, left_index=True, right_index=True\n        )\n\n    @cache_this(cache='cache', key=add_extension('.parquet'))\n    @log_calls\n    def cluster_indices(self):\n        \"\"\"\n        Make a dataframe containing kmeans cluster indices for the original embeddings.\n        \"\"\"\n        self.log(f\"Computing cluster indices for num of clusters: {self.n_clusters}\")\n\n        def compute_cluster_indices():\n            for n_clusters in self.n_clusters:\n                yield self.mk_cluster_learner(\n                    self.embeddings_matrix, n_clusters=n_clusters\n                )\n\n        cluster_columns = (\n            f\"clusters_{n_clusters:02.0f}\" for n_clusters in self.n_clusters\n        )\n\n        r = pd.DataFrame(\n            dict(zip(cluster_columns, compute_cluster_indices())),\n            index=self.raw_data.index,\n        )\n        return r\n",
  "num_of_data_files": 4,
  "tables_info": {
    "cluster_indices..parquet": {
      "shape": [
        3065063,
        5
      ],
      "first_row": {
        "clusters_05": 4,
        "clusters_08": 6,
        "clusters_13": 9,
        "clusters_21": 17,
        "clusters_34": 21
      }
    },
    "planar_embeddings..parquet": {
      "shape": [
        3065063,
        2
      ],
      "first_row": {
        "x": 3.785885334,
        "y": 7.9993748665
      }
    },
    "github_repo_for_cosmos.parquet": {
      "shape": [
        3065063,
        28
      ],
      "first_row": {
        "owner": "xdedzl",
        "name": "RuntimeTerrainEditor",
        "stars": 82,
        "forks": 29,
        "watchers": 6,
        "isFork": false,
        "isArchived": false,
        "languages": "C#: 162842, ShaderLab: 1965",
        "languageCount": 2,
        "topics": "",
        "topicCount": 0,
        "diskUsageKb": 140632,
        "pullRequests": 0,
        "issues": 0,
        "description": "\u8fd0\u884c\u65f6\u5730\u5f62\u7f16\u8f91\u5668",
        "primaryLanguage": "C#",
        "createdAt": "2019-03-18T15:54:07Z",
        "pushedAt": "2020-07-29T15:35:12Z",
        "defaultBranchCommitCount": 40.0,
        "license": null,
        "assignableUserCount": 1,
        "codeOfConduct": null,
        "forkingAllowed": true,
        "nameWithOwner": "xdedzl/RuntimeTerrainEditor",
        "parent": null,
        "embedding": [
          -0.0542843379,
          0.1308139414,
          0.142428726,
          -0.0702300593,
          -0.0430878885,
          0.0078990357,
          0.1142776385,
          0.0375757888,
          -0.1003005281,
          0.0277327523,
          -0.0483539104,
          -0.0268714856,
          0.073330611,
          -0.0335401446,
          0.0491167456,
          0.0031190119,
          -0.069934763,
          -0.0462622643,
          -0.0551702119,
          0.0863234177,
          0.0107596684,
          -0.0103536425,
          0.0322851576,
          -0.0480340123,
          -0.0063364538,
          -0.010575111,
          0.0758405849,
          0.0638813004,
          0.0141985789,
          -0.008434251,
          -0.0519712269,
          -0.0782029182,
          -0.010292124,
          -0.0620111227,
          0.115557231,
          -0.0199321471,
          0.1592603177,
          0.0454256088,
          0.0369113833,
          -0.0521188714,
          0.0010442846,
          0.012537566,
          -0.0591566376,
          0.073773548,
          0.0568927452,
          0.0146661224,
          0.0214209054,
          0.1581775844,
          -0.0477141142,
          0.0110857189,
          0.0232049562,
          -0.0031466954,
          -0.0722478777,
          -0.0700824112,
          0.0026130183,
          -0.1018754169,
          -0.003872619,
          -0.0841087401,
          0.0154658696,
          -0.0219253618,
          0.0759882331,
          0.0167946797,
          0.0333678909,
          0.0905067101,
          0.010858098,
          0.0302427262,
          -0.0799746588,
          0.0125867818,
          -0.0453271791,
          0.0279296134,
          -0.1193960235,
          -0.0822877735,
          -0.0050168722,
          -0.1259908527,
          0.0430386737,
          -0.1063047796,
          -0.0443428755,
          -0.0389292054,
          -0.0426203422,
          -0.1328809708,
          0.0041248468,
          0.0286432318,
          -0.0265761949,
          -0.026330119,
          -0.0956743062,
          -0.0602393784,
          -0.0293322448,
          -0.0168808047,
          0.0413407497,
          -0.0288646985,
          -0.0346966982,
          0.0320144705,
          0.108273387,
          0.0214947276,
          0.0226143729,
          0.0121869082,
          -0.0036296193,
          -0.0020132083,
          -0.0103782499,
          -0.0941486359,
          0.0344998389,
          -0.0442936607,
          0.0358778648,
          0.0175698176,
          0.0361977629,
          0.015650427,
          -0.0933119729,
          0.0712635741,
          -0.0504947715,
          0.0208426267,
          -0.2167436332,
          -0.1022691354,
          -0.0062995427,
          -0.0128820725,
          0.0667357817,
          0.0196122471,
          0.0583199859,
          0.0159703251,
          0.0519712269,
          -0.0619126968,
          -0.0569911748,
          0.0206211582,
          -0.0396182165,
          0.0088587319,
          -0.0087603014,
          -0.0601901598,
          -0.0396920405,
          -0.0296521448,
          -0.0112395156,
          0.0124945026,
          -0.0354595333,
          0.0386339128,
          0.0483539104,
          -0.0155027807,
          0.0014110914,
          -0.0627001375,
          -0.1395742446,
          0.0401349775,
          -0.0025853347,
          -0.0275112838,
          -0.0137556419,
          0.13563703,
          -0.0119162248,
          0.084010303,
          -0.1359323114,
          0.0318176113,
          0.0098245796,
          0.0689996779,
          0.0471235327,
          0.0856344104,
          -0.0413653553,
          -0.037083637,
          -0.0373051055,
          -0.0504947715,
          0.041168496,
          -0.0742657036,
          -0.0376003943,
          -0.013792553,
          -0.0242753867,
          0.0165362991,
          -0.0999068096,
          -0.0374527499,
          0.0486984178,
          0.0690981075,
          -0.0325558409,
          -0.1229395121,
          -0.0059581124,
          0.0653085411,
          -0.1422318667,
          -0.0382401906,
          0.081451118,
          -0.1094545498,
          -0.0194399953,
          -0.0893255472,
          -0.0109011615,
          -0.0390522443,
          0.0261332579,
          -0.025764145,
          -0.0404794812,
          0.0353118889,
          0.0057550999,
          0.056745097,
          -0.0294552837,
          0.1432161629,
          -0.0817956254,
          0.0806144625,
          0.0807128921,
          0.0723463073,
          0.045819331,
          0.0145799965,
          -0.175698176,
          0.0113256425,
          0.0064594918,
          0.0480340123,
          0.0297505762,
          -0.1196913123,
          0.103647165,
          0.0227128044,
          0.004244809,
          0.0247798413,
          0.0296029281,
          -0.0086803269,
          0.1625085175,
          0.0078559723,
          -0.0490675308,
          0.0393475331,
          -0.042669557,
          0.0369359888,
          -0.0280772578,
          0.0069639473,
          0.1254986972,
          0.0217531081,
          -0.0608791746,
          -0.1024659947,
          -0.0297751799,
          0.062257193,
          0.0447119884,
          0.0219745766,
          -0.1456769258,
          0.0156258177,
          -0.0352380648,
          0.0019824489,
          -0.0545304157,
          0.0374527499,
          0.0613221154,
          0.0205719434,
          0.0088402759,
          0.000775908,
          0.0776615515,
          -0.0255672839,
          0.0057458719,
          0.0180496667,
          0.0276097134,
          -0.0494858585,
          0.0832228661,
          0.0269699171,
          -0.0011119554,
          -0.0354103185,
          0.0164132621,
          0.026330119,
          -0.1089624017,
          0.0860773474,
          -0.0064471881,
          -0.1174274012,
          0.0421035849,
          -0.0442444421,
          0.01520749,
          -0.0826814994,
          0.0378218628,
          0.0083050607,
          0.0573356822,
          0.1122106016,
          -0.0105443513,
          -0.0217777155,
          0.0287662707,
          0.0843055993
        ],
        "x": 3.785885334,
        "y": 7.9993748665
      }
    },
    "github-repos.parquet": {
      "shape": [
        3274587,
        26
      ],
      "first_row": {
        "owner": "xdedzl",
        "name": "RuntimeTerrainEditor",
        "stars": 82,
        "forks": 29,
        "watchers": 6,
        "isFork": false,
        "isArchived": false,
        "languages": "C#: 162842, ShaderLab: 1965",
        "languageCount": 2,
        "topics": "",
        "topicCount": 0,
        "diskUsageKb": 140632,
        "pullRequests": 0,
        "issues": 0,
        "description": "\u8fd0\u884c\u65f6\u5730\u5f62\u7f16\u8f91\u5668",
        "primaryLanguage": "C#",
        "createdAt": "2019-03-18T15:54:07Z",
        "pushedAt": "2020-07-29T15:35:12Z",
        "defaultBranchCommitCount": 40.0,
        "license": null,
        "assignableUserCount": 1,
        "codeOfConduct": null,
        "forkingAllowed": true,
        "nameWithOwner": "xdedzl/RuntimeTerrainEditor",
        "parent": null,
        "embedding": [
          -0.0542843379,
          0.1308139414,
          0.142428726,
          -0.0702300593,
          -0.0430878885,
          0.0078990357,
          0.1142776385,
          0.0375757888,
          -0.1003005281,
          0.0277327523,
          -0.0483539104,
          -0.0268714856,
          0.073330611,
          -0.0335401446,
          0.0491167456,
          0.0031190119,
          -0.069934763,
          -0.0462622643,
          -0.0551702119,
          0.0863234177,
          0.0107596684,
          -0.0103536425,
          0.0322851576,
          -0.0480340123,
          -0.0063364538,
          -0.010575111,
          0.0758405849,
          0.0638813004,
          0.0141985789,
          -0.008434251,
          -0.0519712269,
          -0.0782029182,
          -0.010292124,
          -0.0620111227,
          0.115557231,
          -0.0199321471,
          0.1592603177,
          0.0454256088,
          0.0369113833,
          -0.0521188714,
          0.0010442846,
          0.012537566,
          -0.0591566376,
          0.073773548,
          0.0568927452,
          0.0146661224,
          0.0214209054,
          0.1581775844,
          -0.0477141142,
          0.0110857189,
          0.0232049562,
          -0.0031466954,
          -0.0722478777,
          -0.0700824112,
          0.0026130183,
          -0.1018754169,
          -0.003872619,
          -0.0841087401,
          0.0154658696,
          -0.0219253618,
          0.0759882331,
          0.0167946797,
          0.0333678909,
          0.0905067101,
          0.010858098,
          0.0302427262,
          -0.0799746588,
          0.0125867818,
          -0.0453271791,
          0.0279296134,
          -0.1193960235,
          -0.0822877735,
          -0.0050168722,
          -0.1259908527,
          0.0430386737,
          -0.1063047796,
          -0.0443428755,
          -0.0389292054,
          -0.0426203422,
          -0.1328809708,
          0.0041248468,
          0.0286432318,
          -0.0265761949,
          -0.026330119,
          -0.0956743062,
          -0.0602393784,
          -0.0293322448,
          -0.0168808047,
          0.0413407497,
          -0.0288646985,
          -0.0346966982,
          0.0320144705,
          0.108273387,
          0.0214947276,
          0.0226143729,
          0.0121869082,
          -0.0036296193,
          -0.0020132083,
          -0.0103782499,
          -0.0941486359,
          0.0344998389,
          -0.0442936607,
          0.0358778648,
          0.0175698176,
          0.0361977629,
          0.015650427,
          -0.0933119729,
          0.0712635741,
          -0.0504947715,
          0.0208426267,
          -0.2167436332,
          -0.1022691354,
          -0.0062995427,
          -0.0128820725,
          0.0667357817,
          0.0196122471,
          0.0583199859,
          0.0159703251,
          0.0519712269,
          -0.0619126968,
          -0.0569911748,
          0.0206211582,
          -0.0396182165,
          0.0088587319,
          -0.0087603014,
          -0.0601901598,
          -0.0396920405,
          -0.0296521448,
          -0.0112395156,
          0.0124945026,
          -0.0354595333,
          0.0386339128,
          0.0483539104,
          -0.0155027807,
          0.0014110914,
          -0.0627001375,
          -0.1395742446,
          0.0401349775,
          -0.0025853347,
          -0.0275112838,
          -0.0137556419,
          0.13563703,
          -0.0119162248,
          0.084010303,
          -0.1359323114,
          0.0318176113,
          0.0098245796,
          0.0689996779,
          0.0471235327,
          0.0856344104,
          -0.0413653553,
          -0.037083637,
          -0.0373051055,
          -0.0504947715,
          0.041168496,
          -0.0742657036,
          -0.0376003943,
          -0.013792553,
          -0.0242753867,
          0.0165362991,
          -0.0999068096,
          -0.0374527499,
          0.0486984178,
          0.0690981075,
          -0.0325558409,
          -0.1229395121,
          -0.0059581124,
          0.0653085411,
          -0.1422318667,
          -0.0382401906,
          0.081451118,
          -0.1094545498,
          -0.0194399953,
          -0.0893255472,
          -0.0109011615,
          -0.0390522443,
          0.0261332579,
          -0.025764145,
          -0.0404794812,
          0.0353118889,
          0.0057550999,
          0.056745097,
          -0.0294552837,
          0.1432161629,
          -0.0817956254,
          0.0806144625,
          0.0807128921,
          0.0723463073,
          0.045819331,
          0.0145799965,
          -0.175698176,
          0.0113256425,
          0.0064594918,
          0.0480340123,
          0.0297505762,
          -0.1196913123,
          0.103647165,
          0.0227128044,
          0.004244809,
          0.0247798413,
          0.0296029281,
          -0.0086803269,
          0.1625085175,
          0.0078559723,
          -0.0490675308,
          0.0393475331,
          -0.042669557,
          0.0369359888,
          -0.0280772578,
          0.0069639473,
          0.1254986972,
          0.0217531081,
          -0.0608791746,
          -0.1024659947,
          -0.0297751799,
          0.062257193,
          0.0447119884,
          0.0219745766,
          -0.1456769258,
          0.0156258177,
          -0.0352380648,
          0.0019824489,
          -0.0545304157,
          0.0374527499,
          0.0613221154,
          0.0205719434,
          0.0088402759,
          0.000775908,
          0.0776615515,
          -0.0255672839,
          0.0057458719,
          0.0180496667,
          0.0276097134,
          -0.0494858585,
          0.0832228661,
          0.0269699171,
          -0.0011119554,
          -0.0354103185,
          0.0164132621,
          0.026330119,
          -0.1089624017,
          0.0860773474,
          -0.0064471881,
          -0.1174274012,
          0.0421035849,
          -0.0442444421,
          0.01520749,
          -0.0826814994,
          0.0378218628,
          0.0083050607,
          0.0573356822,
          0.1122106016,
          -0.0105443513,
          -0.0217777155,
          0.0287662707,
          0.0843055993
        ]
      }
    }
  }
}